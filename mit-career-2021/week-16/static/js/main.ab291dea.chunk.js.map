{"version":3,"sources":["components/Player/index.js","components/Board/index.js","App.js","index.js"],"names":["Player","restart","gameOver","currentPlayer","Alert","variant","className","onClick","toLowerCase","board","Board","setPlayerMove","currentBoard","getBoardValue","row","col","boardMapping","getBoardValueLabel","rows","map","Row","Col","handlePlayerMove","winnerValues","App","useState","setCurrentPlayer","Array","fill","boardValues","setBoardValues","setGameOver","Container","index","player","combination","a","b","c","prevPlayer","checkIfPlayerWins","href","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab291dea.chunk.js","sourcesContent":["import { Alert } from \"react-bootstrap\";\r\n\r\nfunction Player({ restart, gameOver, currentPlayer }) {\r\n  return (\r\n    <Alert\r\n      variant=\"dark\"\r\n      className={\r\n        gameOver ? \"alert-border-bottom winner\" : \"alert-border-bottom\"\r\n      }\r\n    >\r\n      {!gameOver ? (\r\n        <>\r\n          Current Player:{\" \"}\r\n          <h3 className={currentPlayer.toLowerCase()}>{currentPlayer}</h3>\r\n        </>\r\n      ) : (\r\n        <div onClick={() => restart()}>\r\n          <h3 className={`${currentPlayer.toLowerCase()}`}>\r\n            {currentPlayer} wins!\r\n          </h3>\r\n          Click here to restart\r\n        </div>\r\n      )}\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import { Alert, Col, Row } from \"react-bootstrap\";\r\n\r\nconst board = [\r\n  [0, 1, 2],\r\n  [3, 4, 5],\r\n  [6, 7, 8],\r\n];\r\n\r\nconst Board = ({ gameOver, setPlayerMove, currentBoard }) => {\r\n  const getBoardValue = (row, col) => {\r\n    const boardMapping = board[row][col];\r\n    return currentBoard[boardMapping];\r\n  };\r\n\r\n  const getBoardValueLabel = (row, col) => {\r\n    return getBoardValue(row, col) === 0\r\n      ? \"X\"\r\n      : getBoardValue(row, col) === 1\r\n      ? \"O\"\r\n      : \"\";\r\n  };\r\n\r\n  const handlePlayerMove = (row, col) => {\r\n    if (!gameOver) setPlayerMove(board[row][col]);\r\n  };\r\n\r\n  const rows = [0, 1, 2].map((row) => {\r\n    return (\r\n      <Row key={`row-${row}`} className={`board-row board-row-${row}`}>\r\n        {[0, 1, 2].map((col) => {\r\n          return (\r\n            <Col\r\n              key={`col-${board[row][col]}`}\r\n              onClick={() => handlePlayerMove(row, col)}\r\n              className={`board-box board-box-${row}-${col} \r\n                ${getBoardValue(row, col) !== null ? \"selected\" : \"\"} \r\n                ${gameOver ? \"game-over\" : \"\"}`}\r\n            >\r\n              <h3 className={getBoardValueLabel(row, col).toLowerCase()}>\r\n                {getBoardValueLabel(row, col)}\r\n              </h3>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Alert variant=\"dark\">\r\n      <div className=\"board\">{rows}</div>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport { Alert, Container } from \"react-bootstrap\";\n\nimport Player from \"./components/Player\";\nimport Board from \"./components/Board\";\n\nconst winnerValues = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nfunction App() {\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const [boardValues, setBoardValues] = useState(new Array(9).fill(null));\n  const [gameOver, setGameOver] = useState(false);\n\n  const checkIfPlayerWins = (player, board) => {\n    // Loops through possible combinations. If one found, player wins\n    for (let combination of winnerValues) {\n      const [a, b, c] = combination;\n      if (board[a] === player && board[b] === player && board[c] === player) {\n        setGameOver(true);\n        return;\n      }\n    }\n    setCurrentPlayer((prevPlayer) => (prevPlayer === 0 ? 1 : 0));\n  };\n\n  const setPlayerMove = (index) => {\n    if (boardValues[index] === null) {\n      boardValues[index] = currentPlayer;\n      setBoardValues(boardValues);\n      checkIfPlayerWins(currentPlayer, boardValues);\n    }\n  };\n\n  const restart = () => {\n    setCurrentPlayer(0);\n    setBoardValues(new Array(9).fill(null));\n    setGameOver(false);\n  };\n\n  return (\n    <Container>\n      <Player\n        gameOver={gameOver}\n        currentPlayer={currentPlayer === 0 ? \"X\" : \"O\"}\n        restart={restart}\n      ></Player>\n      <Board\n        gameOver={gameOver}\n        currentBoard={boardValues}\n        setPlayerMove={setPlayerMove}\n      ></Board>\n      <Alert variant=\"dark\" className={\"alert-border-top small-font\"}>\n        <a\n          href=\"https://github.com/renzodupont\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Follow me in GitHub\n        </a>\n      </Alert>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}