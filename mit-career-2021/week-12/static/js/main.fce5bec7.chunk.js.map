{"version":3,"sources":["components/PostItForm.js","components/PostItCard.js","App.js","index.js"],"names":["PostItForm","onSubmit","currentPostIt","initialValues","enableReinitialize","values","resetForm","title","description","index","inBoard","type","alert","validate","errors","touched","className","htmlFor","id","name","as","value","PostItCard","postIt","onEdit","onDelete","role","onClick","welcomePostIt","newPostIt","currentNumberOfPostIts","App","useState","postItArray","setPostItArray","length","setCurrentPostIt","editPostIt","deletePostIt","currentPostIts","slice","href","target","rel","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fce5bec7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Formik, Field, Form } from \"formik\";\n\nconst PostItForm = ({ onSubmit, currentPostIt }) => (\n  <div>\n    <Formik\n      initialValues={{ ...currentPostIt }}\n      enableReinitialize=\"true\"\n      onSubmit={(values, { resetForm }) => {\n        if (!values.title || !values.description) {\n          alert(\"Fill both title and description to continue\");\n          return;\n        }\n        onSubmit({\n          title: values.title,\n          description: values.description,\n          index: values.index,\n          inBoard: values.inBoard,\n          type: values.type,\n        });\n        resetForm();\n      }}\n      validate={(values) => {\n        const errors = {};\n        if (!values.title) errors.title = \"Required\";\n        if (!values.description) errors.description = \"Required\";\n        return errors;\n      }}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <Field\n              id=\"title\"\n              name=\"title\"\n              className={\n                errors.title && touched.title\n                  ? \"input-error form-control\"\n                  : \"form-control\"\n              }\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <Field\n              id=\"description\"\n              name=\"description\"\n              as=\"textarea\"\n              className={\n                errors.description && touched.description\n                  ? \"input-error form-control\"\n                  : \"form-control\"\n              }\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <Field id=\"type\" name=\"type\" as=\"select\" className=\"form-control\">\n              <option value=\"Normal\">Normal</option>\n              <option value=\"Reminder\">Reminder</option>\n              <option value=\"Important\">Important</option>\n            </Field>\n          </div>\n\n          <Field\n            id=\"index\"\n            name=\"index\"\n            type=\"hidden\"\n            value={currentPostIt.index}\n          />\n\n          <Field\n            id=\"inBoard\"\n            name=\"inBoard\"\n            type=\"hidden\"\n            value={currentPostIt.inBoard}\n          />\n\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Add Post-It\n          </button>\n        </Form>\n      )}\n    </Formik>\n  </div>\n);\n\nexport default PostItForm;\n","import React from \"react\";\n\nconst PostItCard = ({ index, postIt, onEdit, onDelete }) => {\n  return (\n    <div\n      className={\n        postIt.type === \"Normal\"\n          ? \"post-it alert alert-warning\"\n          : postIt.type === \"Reminder\"\n          ? \"post-it alert alert-primary\"\n          : \"post-it alert alert-danger\"\n      }\n      role=\"alert\"\n    >\n      <div className=\"buttons\">\n        <button className=\"btn btn-danger\" onClick={() => onDelete(index)}>\n          DELETE\n        </button>\n        <button className=\"btn btn-info\" onClick={() => onEdit(index)}>\n          EDIT\n        </button>\n      </div>\n      <h4>{postIt.title}</h4>\n      <p>{postIt.description}</p>\n    </div>\n  );\n};\n\nexport default PostItCard;\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport PostItForm from \"./components/PostItForm\";\nimport PostItCard from \"./components/PostItCard\";\n\nconst welcomePostIt = {\n  title: \"Example\",\n  description: \"This is just an example Post-It to wish you a nice day :)\",\n  index: 0,\n  inBoard: true,\n  type: \"Normal\",\n};\nconst newPostIt = {\n  title: \"\",\n  description: \"\",\n  type: \"Normal\",\n};\nlet currentNumberOfPostIts = 1; /// Initial value, since we start with the Welcome Post it :)\n\nfunction App() {\n  const [postItArray, setPostItArray] = useState([welcomePostIt]);\n  const [currentPostIt, setCurrentPostIt] = useState({\n    title: \"\",\n    description: \"\",\n    index: postItArray.length,\n    type: \"Normal\",\n  });\n\n  const addPostIt = (postIt) => {\n    if (!postIt.inBoard) {\n      setPostItArray((currentPostIts) => [...currentPostIts, postIt]);\n      postIt.inBoard = true;\n      currentNumberOfPostIts++;\n    } else {\n      postItArray[postIt.index] = postIt;\n    }\n    setCurrentPostIt({ index: currentNumberOfPostIts, ...newPostIt });\n  };\n  const editPostIt = (index) => {\n    if (postItArray.length > index) {\n      setCurrentPostIt(postItArray[index]);\n    }\n  };\n  const deletePostIt = (index) => {\n    if (postItArray.length > index) {\n      setPostItArray((currentPostIts) => [\n        ...currentPostIts.slice(0, index),\n        ...currentPostIts.slice(index + 1),\n      ]);\n      currentNumberOfPostIts--;\n      setCurrentPostIt({ index: currentNumberOfPostIts, ...newPostIt });\n    }\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row left-panel\">\n        <div className=\"col col-md-2 post-it-form-container\">\n          <PostItForm onSubmit={addPostIt} currentPostIt={currentPostIt} />\n          <div className=\"row repo\">\n            <a\n              href=\"https://github.com/renzodupont/simple-post-it-with-react-mitlab-2021\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              GitHub Repository\n            </a>\n          </div>\n        </div>\n        <div className=\"col col-md-10 post-it-container\">\n          {postItArray.map((postIt, index) => (\n            <PostItCard\n              key={index}\n              index={index}\n              postIt={postIt}\n              onEdit={editPostIt}\n              onDelete={deletePostIt}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}