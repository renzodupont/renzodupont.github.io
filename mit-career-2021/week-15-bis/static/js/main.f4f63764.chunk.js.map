{"version":3,"sources":["Results/img/loading.gif","Results/index.js","Search/index.js","Pagination/index.js","App.js","index.js"],"names":["Results","isLoaded","animeArray","console","log","map","item","index","Card","className","Body","Title","anime","Text","quote","character","src","loading","alt","Search","onSearch","Form","Group","Label","Control","id","type","placeholder","onKeyPress","e","key","Pagination","page","onChangePage","Array","fill","Button","variant","onClick","App","useState","setAnimeArray","setIsLoaded","setPage","useEffect","query","document","getElementById","fetchData","value","a","axios","get","encodeURIComponent","result","data","handleOnChangePage","i","Container","text","target","Row","ReactDOM","render","StrictMode"],"mappings":"wVAAe,MAA0B,oC,OC8B1BA,EA1BC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAE3B,OADAC,QAAQC,IAAIF,GAEV,qCACGD,GACCC,EAAWG,KAAI,SAACC,EAAMC,GACpB,OACE,cAACC,EAAA,EAAD,CAAMC,UAAU,QAAhB,SACE,eAACD,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,UACE,6BAAKL,EAAKM,UAEZ,eAACJ,EAAA,EAAKK,KAAN,WACGP,EAAKQ,MACN,uBACA,4BAAIR,EAAKS,mBARcR,OAcjCN,GAAY,qBAAKQ,UAAU,UAAUO,IAAKC,EAASC,IAAI,gB,QCAhDC,EAtBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,eAACC,EAAA,EAAKC,MAAN,WACE,eAACD,EAAA,EAAKE,MAAN,WACE,6GAIA,4EAEF,cAACF,EAAA,EAAKG,QAAN,CACEC,GAAG,SACHC,KAAK,OACLC,YAAY,kBACZC,WAAY,SAACC,GACG,UAAVA,EAAEC,KAAiBV,EAASS,U,QCI3BE,EAnBI,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAE1B,OADA9B,QAAQC,IAAI,OAAS,IAAI8B,MAAM,IAAIC,KAAK,IAEtC,qBAAK1B,UAAU,aAAf,SACG,IAAIyB,MAAM,IAAIC,KAAK,GAAG9B,KAAI,SAACC,EAAMC,GAChC,OACE,cAAC6B,EAAA,EAAD,CACEC,QAASL,IAASzB,EAAQ,EAAI,YAAc,UAE5C+B,QAAS,kBAAML,EAAa1B,EAAQ,IAHtC,SAKGA,EAAQ,GAHJA,SCyDFgC,MA3Df,WACE,MAAoCC,mBAAS,IAA7C,mBAAOtC,EAAP,KAAmBuC,EAAnB,KACA,EAAgCD,oBAAS,GAAzC,mBAAOvC,EAAP,KAAiByC,EAAjB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOR,EAAP,KAAaW,EAAb,KAEAC,qBAAU,WACR,IAAMC,EAAQC,SAASC,eAAe,UACtCC,EAAUH,EAAMI,MAAQJ,EAAMI,MAAQ,YACrC,CAACjB,IAEJ,IAAMgB,EAAS,uCAAG,WAAOH,GAAP,eAAAK,EAAA,6DAChBR,GAAY,GACZvC,QAAQC,IAAI4B,GAFI,kBAIOmB,IAAMC,IAAN,8DACoCC,mBACrDR,GAFiB,iBAGTb,IAPE,OAIRsB,EAJQ,OASdb,EAAca,EAAOC,MATP,gDAWdd,EAAc,CACZ,CACE7B,MAAO,QACPE,MAAO,+DACPC,UAAW,MAfD,QAmBhB2B,GAAY,GAnBI,yDAAH,sDA2BTc,EAAqB,SAACC,GAC1Bd,EAAQc,IAGV,OACE,eAACC,EAAA,EAAD,WACE,cAAClD,EAAA,EAAD,UACE,cAAC,EAAD,CAAQY,SAZS,SAACS,GACtB,IAAM8B,EAAO9B,EAAE+B,OAAOX,MACtBD,EAAUW,QAYR,cAACE,EAAA,EAAD,UACE,cAAC,EAAD,CAAY7B,KAAMA,EAAMC,aAAcuB,MAExC,cAAChD,EAAA,EAAD,UACE,cAAC,EAAD,CAASN,WAAYA,EAAYD,SAAUA,MAE7C,cAAC4D,EAAA,EAAD,UACE,cAAC,EAAD,CAAY7B,KAAMA,EAAMC,aAAcuB,UCzD9CM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASC,eAAe,W","file":"static/js/main.f4f63764.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.5a61fe4a.gif\";","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport loading from \"./img/loading.gif\";\r\n\r\nconst Results = ({ isLoaded, animeArray }) => {\r\n  console.log(animeArray);\r\n  return (\r\n    <>\r\n      {isLoaded &&\r\n        animeArray.map((item, index) => {\r\n          return (\r\n            <Card className=\"quote\" key={index}>\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  <h4>{item.anime}</h4>\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  {item.quote}\r\n                  <br />\r\n                  <i>{item.character}</i>\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          );\r\n        })}\r\n      {!isLoaded && <img className=\"loading\" src={loading} alt=\"loading\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst Search = ({ onSearch }) => {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>\r\n        <i>\r\n          Please have in mind that each page change will count against the API\r\n          limits.\r\n        </i>\r\n        <p>* Use the Enter key to apply your filter</p>\r\n      </Form.Label>\r\n      <Form.Control\r\n        id=\"search\"\r\n        type=\"text\"\r\n        placeholder=\"Search by title\"\r\n        onKeyPress={(e) => {\r\n          if (e.key === \"Enter\") onSearch(e);\r\n        }}\r\n      />\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Pagination = ({ page, onChangePage }) => {\r\n  console.log(\"....\" + new Array(10).fill(0));\r\n  return (\r\n    <div className=\"pagination\">\r\n      {new Array(10).fill(0).map((item, index) => {\r\n        return (\r\n          <Button\r\n            variant={page !== index + 1 ? \"secondary\" : \"primary\"}\r\n            key={index}\r\n            onClick={() => onChangePage(index + 1)}\r\n          >\r\n            {index + 1}\r\n          </Button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Card, Container, Row } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport Results from \"./Results\";\r\nimport Search from \"./Search\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nfunction App() {\r\n  const [animeArray, setAnimeArray] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const query = document.getElementById(\"search\");\r\n    fetchData(query.value ? query.value : \"naruto\");\r\n  }, [page]);\r\n\r\n  const fetchData = async (query) => {\r\n    setIsLoaded(false);\r\n    console.log(page);\r\n    try {\r\n      const result = await axios.get(\r\n        `https://animechan.vercel.app/api/quotes/anime?title=${encodeURIComponent(\r\n          query\r\n        )}&page=${page}`\r\n      );\r\n      setAnimeArray(result.data);\r\n    } catch (error) {\r\n      setAnimeArray([\r\n        {\r\n          anime: \"Error\",\r\n          quote: \"API Limit exceeded. Please try again in a couple of minutes.\",\r\n          character: \"\",\r\n        },\r\n      ]);\r\n    }\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  const handleOnSearch = (e) => {\r\n    const text = e.target.value;\r\n    fetchData(text);\r\n  };\r\n\r\n  const handleOnChangePage = (i) => {\r\n    setPage(i);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <Search onSearch={handleOnSearch} />\r\n      </Card>\r\n      <Row>\r\n        <Pagination page={page} onChangePage={handleOnChangePage} />\r\n      </Row>\r\n      <Card>\r\n        <Results animeArray={animeArray} isLoaded={isLoaded} />\r\n      </Card>\r\n      <Row>\r\n        <Pagination page={page} onChangePage={handleOnChangePage} />\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}