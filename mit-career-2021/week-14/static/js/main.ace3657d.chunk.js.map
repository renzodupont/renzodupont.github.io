{"version":3,"sources":["components/ToDoForm/index.js","components/ToDoItem/index.js","components/ToDoList/index.js","App.js","index.js"],"names":["ToDoForm","currentToDo","onAdd","useState","text","setText","className","onSubmit","e","preventDefault","alert","id","type","value","onChange","target","inList","ToDoItem","toDoItem","onSelect","onDelete","onChangeStatus","onClick","checked","isDone","index","ToDoList","toDoList","filter","toDo","map","t","sampleToDoList","newToDo","currentNumberOfToDos","App","toDoArray","setToDoArray","setCurrentToDo","useEffect","document","getElementById","selectCurrentToDo","a","currentToDoList","console","log","length","slice","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ace3657d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst ToDoForm = ({ currentToDo, onAdd }) => {\n  const [text, setText] = useState(currentToDo.text);\n\n  const submitFormHandler = (e) => {\n    e.preventDefault();\n    if (!text) {\n      alert(\"Please enter a value to continue\");\n      return;\n    }\n    currentToDo.text = text;\n    onAdd(currentToDo);\n    setText(\"\");\n  };\n\n  return (\n    <div className=\"row\">\n      <form onSubmit={submitFormHandler}>\n        <input\n          id=\"toDoText\"\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          className=\"form-control\"\n        />\n        <button type=\"submit\" className=\"btn btn-info\">\n          {currentToDo.inList ? \"Save\" : \"Add\"}\n        </button>\n        <br />\n        <p>* Tip: Click in the title of any ToDo to edit it</p>\n      </form>\n    </div>\n  );\n};\n\nexport default ToDoForm;\n","import React from \"react\";\n\nconst ToDoItem = ({ toDoItem, onSelect, onDelete, onChangeStatus }) => {\n  return (\n    <div className=\"todo-item\">\n      <p onClick={() => onSelect(toDoItem)}>{toDoItem.text}</p>\n      <input\n        type=\"checkbox\"\n        checked={toDoItem.isDone}\n        onChange={(e) => onChangeStatus(toDoItem.index, e.target.checked)}\n      />\n      <button\n        className=\"btn btn-danger\"\n        onClick={() => onDelete(toDoItem.index)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default ToDoItem;\n","import React from \"react\";\nimport ToDoItem from \"../ToDoItem\";\n\nconst ToDoList = ({ toDoList, onSelect, onDelete, onChangeStatus }) => {\n  return (\n    <>\n      <div className=\"row pending-todos\">\n        <h5 className=\"card-title\">Pending To-Do</h5>\n        {toDoList\n          .filter((toDo) => !toDo.isDone)\n          .map((toDo) => {\n            return (\n              <ToDoItem\n                key={toDo.index}\n                toDoItem={toDo}\n                onDelete={onDelete}\n                onSelect={(t) => onSelect(t)}\n                onChangeStatus={(index, checked) =>\n                  onChangeStatus(index, checked)\n                }\n              />\n            );\n          })}\n      </div>\n      <div className=\"row resolved-todos\">\n        <h5 className=\"card-title\">Resolved</h5>\n        {toDoList\n          .filter((toDo) => toDo.isDone)\n          .map((toDo) => {\n            return (\n              <ToDoItem\n                key={toDo.index}\n                toDoItem={toDo}\n                onDelete={onDelete}\n                onSelect={(t) => onSelect(t)}\n                onChangeStatus={(index, checked) =>\n                  onChangeStatus(index, checked)\n                }\n              />\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default ToDoList;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ToDoForm from \"./components/ToDoForm\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst sampleToDoList = [\n  {\n    text: \"This is a sample ToDo\",\n    isDone: false,\n    index: 0,\n    inList: true,\n  },\n];\nlet newToDo = {\n  text: \"\",\n  isDone: false,\n  inList: false,\n};\nlet currentNumberOfToDos = 1; /// Starts with the sample ToDo\n\nfunction App() {\n  const [toDoArray, setToDoArray] = useState([...sampleToDoList]);\n  const [currentToDo, setCurrentToDo] = useState({\n    ...newToDo,\n    index: currentNumberOfToDos,\n  });\n\n  const addToDo = (toDo) => {\n    if (!toDo.inList) {\n      toDo.inList = true;\n      setToDoArray((currentToDoList) => [...currentToDoList, toDo]);\n      currentNumberOfToDos++;\n      setCurrentToDo({ ...newToDo, index: currentNumberOfToDos });\n    } else {\n      setCurrentToDo({ ...newToDo, index: currentNumberOfToDos });\n      setToDoArray([...toDoArray]); //Clone array to force re-render on edited To-do\n    }\n    console.log(currentNumberOfToDos);\n  };\n\n  const changeStatus = (index, value) => {\n    const toDo = toDoArray[index];\n    toDo.isDone = value;\n    setToDoArray([...toDoArray]); //Clone array to force re-render\n  };\n\n  useEffect(() => {\n    /// This helps to load the text of the currently selected ToDo and load its state inside the ToDoForm\n    /// Is it needed to be used together with the function below\n    document.getElementById(\"toDoText\").value = currentToDo.text;\n  });\n  const selectCurrentToDo = async (toDo) => {\n    setCurrentToDo(toDo);\n  };\n\n  const removeToDo = (index) => {\n    if (toDoArray.length > index) {\n      setToDoArray((currentToDoList) => [\n        ...currentToDoList.slice(0, index),\n        ...currentToDoList.slice(index + 1),\n      ]);\n      currentNumberOfToDos--;\n      setCurrentToDo({ ...newToDo, index: currentNumberOfToDos });\n    }\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <div className=\"card todo-form-container\">\n        <ToDoForm currentToDo={currentToDo} onAdd={addToDo} />\n      </div>\n      <div className=\"card todo-list-container\">\n        <ToDoList\n          toDoList={toDoArray}\n          onDelete={removeToDo}\n          onSelect={selectCurrentToDo}\n          onChangeStatus={changeStatus}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}